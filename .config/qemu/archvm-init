#!/bin/bash

# Default values
cdrom_iso="/backup/Applications/archlinux-2024.12.01-x86_64.iso"
hard_disk_image="~/.virtualization/archFS.qcow2"
memory="2G"
cpus="2"
use_iso=0

# Parse command-line arguments
while getopts ":m:s:h:i:f:iso" opt; do
    case $opt in
        m)
            memory="$OPTARG"
            ;;
        s)
            cpus="$OPTARG"
            ;;
        h)
            help=1
            ;;
        i)
            use_iso=1
            ;;
        f)
            hard_disk_image="$OPTARG"
            ;;
        \?)
            echo "Invalid option: -$OPTARG"
            exit 1
            ;;
    esac
done

# Use the default cdrom_iso if -iso was specified without -i
if $use_iso && [ "$cdrom_iso" = "" ]; then
    cdrom_iso="~/Applications/archlinux-2024.12.01-x86_64.iso"
fi

# Construct the QEMU command
qemu_cmd="qemu-system-x86_64 -enable-kvm -m $memory -smp $cpus -hda $hard_disk_image -boot d -netdev user,id=net0,net=192.168.0.0/24,dhcpstart=192.168.0.9 -device virtio-net-pci,netdev=net0 -vga virtio -device AC97"

# Add the -cdrom option only if -iso or -i was specified
if [[ $use_iso ]]; then
    qemu_cmd="$qemu_cmd -cdrom $cdrom_iso"
fi

# Execute the QEMU command
echo $qemu_cmd
eval "$qemu_cmd"
